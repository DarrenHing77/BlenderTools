import bpy


from mathutils import Color

def create(obj):
    # generated by rigify.utils.write_metarig
    bpy.ops.object.mode_set(mode='EDIT')
    arm = obj.data

    # Compatibility layer for Blender 4.0+ bone collections
    if not hasattr(arm, 'rigify_layers'):
        # Create compatibility wrapper for Blender 4.0+
        class FakeRigifyLayers:
            def __init__(self, armature):
                self.armature = armature
                self._layers = []
            
            def add(self):
                # Create bone collection instead of layer
                count = len(self._layers)
                if not self.armature.collections:
                    collection = self.armature.collections.new(name="Layer 1")
                else:
                    collection = self.armature.collections.new(name=f"Layer {count + 1}")
                self._layers.append(collection)
                return collection
            
            def __len__(self):
                return len(self._layers)
            
            def __getitem__(self, index):
                return self._layers[index] if index < len(self._layers) else None
        
        arm.rigify_layers = FakeRigifyLayers(arm)

    # Original rigify layer setup
    arm.rigify_layers.add()

    bones = {}

    bone = arm.edit_bones.new('spine')
    bone.head[:] = 0.0000, 0.0552, 1.0099
    bone.tail[:] = 0.0000, 0.0172, 1.1573
    bone.roll = 0.0000
    bone.use_connect = False
    bones['spine'] = bone.name

    bone = arm.edit_bones.new('pelvis')
    bone.head[:] = 0.0000, 0.0552, 1.0099
    bone.tail[:] = 0.0000, 0.0552, 1.0796
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine']]
    bones['pelvis'] = bone.name

    bone = arm.edit_bones.new('spine.001')
    bone.head[:] = 0.0000, 0.0172, 1.1573
    bone.tail[:] = 0.0000, -0.0158, 1.2929
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine']]
    bones['spine.001'] = bone.name

    bone = arm.edit_bones.new('thigh.L')
    bone.head[:] = 0.0970, 0.0138, 0.9364
    bone.tail[:] = 0.0980, 0.0118, 0.4946
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['thigh.L'] = bone.name

    bone = arm.edit_bones.new('thigh.R')
    bone.head[:] = -0.0970, 0.0138, 0.9364
    bone.tail[:] = -0.0980, 0.0118, 0.4946
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['pelvis']]
    bones['thigh.R'] = bone.name

    bone = arm.edit_bones.new('spine.002')
    bone.head[:] = 0.0000, -0.0158, 1.2929
    bone.tail[:] = 0.0000, -0.0478, 1.4286
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine.001']]
    bones['spine.002'] = bone.name

    bone = arm.edit_bones.new('shin.L')
    bone.head[:] = 0.0980, 0.0118, 0.4946
    bone.tail[:] = 0.0993, 0.0677, 0.0589
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.L']]
    bones['shin.L'] = bone.name

    bone = arm.edit_bones.new('shin.R')
    bone.head[:] = -0.0980, 0.0118, 0.4946
    bone.tail[:] = -0.0993, 0.0677, 0.0589
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['thigh.R']]
    bones['shin.R'] = bone.name

    bone = arm.edit_bones.new('spine.003')
    bone.head[:] = 0.0000, -0.0478, 1.4286
    bone.tail[:] = 0.0000, -0.0277, 1.6471
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine.002']]
    bones['spine.003'] = bone.name

    bone = arm.edit_bones.new('foot.L')
    bone.head[:] = 0.0993, 0.0677, 0.0589
    bone.tail[:] = 0.0993, -0.0881, 0.0137
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.L']]
    bones['foot.L'] = bone.name

    bone = arm.edit_bones.new('foot.R')
    bone.head[:] = -0.0993, 0.0677, 0.0589
    bone.tail[:] = -0.0993, -0.0881, 0.0137
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shin.R']]
    bones['foot.R'] = bone.name

    bone = arm.edit_bones.new('shoulder.L')
    bone.head[:] = 0.0164, -0.0057, 1.6051
    bone.tail[:] = 0.1627, 0.0015, 1.5846
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['shoulder.L'] = bone.name

    bone = arm.edit_bones.new('shoulder.R')
    bone.head[:] = -0.0164, -0.0057, 1.6051
    bone.tail[:] = -0.1627, 0.0015, 1.5846
    bone.roll = 0.0000
    bone.use_connect = False
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['shoulder.R'] = bone.name

    bone = arm.edit_bones.new('neck')
    bone.head[:] = 0.0000, -0.0277, 1.6471
    bone.tail[:] = 0.0000, -0.0247, 1.7813
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['spine.003']]
    bones['neck'] = bone.name

    bone = arm.edit_bones.new('toe.L')
    bone.head[:] = 0.0993, -0.0881, 0.0137
    bone.tail[:] = 0.0993, -0.1606, 0.0137
    bone.roll = -0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.L']]
    bones['toe.L'] = bone.name

    bone = arm.edit_bones.new('toe.R')
    bone.head[:] = -0.0993, -0.0881, 0.0137
    bone.tail[:] = -0.0993, -0.1606, 0.0137
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['foot.R']]
    bones['toe.R'] = bone.name

    bone = arm.edit_bones.new('upper_arm.L')
    bone.head[:] = 0.1627, 0.0015, 1.5846
    bone.tail[:] = 0.4315, 0.0291, 1.4491
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shoulder.L']]
    bones['upper_arm.L'] = bone.name

    bone = arm.edit_bones.new('upper_arm.R')
    bone.head[:] = -0.1627, 0.0015, 1.5846
    bone.tail[:] = -0.4315, 0.0291, 1.4491
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['shoulder.R']]
    bones['upper_arm.R'] = bone.name

    bone = arm.edit_bones.new('head')
    bone.head[:] = 0.0000, -0.0247, 1.7813
    bone.tail[:] = 0.0000, -0.0247, 1.9796
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['neck']]
    bones['head'] = bone.name

    bone = arm.edit_bones.new('forearm.L')
    bone.head[:] = 0.4315, 0.0291, 1.4491
    bone.tail[:] = 0.6920, 0.0685, 1.3207
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['upper_arm.L']]
    bones['forearm.L'] = bone.name

    bone = arm.edit_bones.new('forearm.R')
    bone.head[:] = -0.4315, 0.0291, 1.4491
    bone.tail[:] = -0.6920, 0.0685, 1.3207
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['upper_arm.R']]
    bones['forearm.R'] = bone.name

    bone = arm.edit_bones.new('hand.L')
    bone.head[:] = 0.6920, 0.0685, 1.3207
    bone.tail[:] = 0.7618, 0.0881, 1.2585
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['forearm.L']]
    bones['hand.L'] = bone.name

    bone = arm.edit_bones.new('hand.R')
    bone.head[:] = -0.6920, 0.0685, 1.3207
    bone.tail[:] = -0.7618, 0.0881, 1.2585
    bone.roll = 0.0000
    bone.use_connect = True
    bone.parent = arm.edit_bones[bones['forearm.R']]
    bones['hand.R'] = bone.name

    bpy.ops.object.mode_set(mode='OBJECT')
    pbone = obj.pose.bones[bones['spine']]
    pbone.rigify_type = 'spines.spine'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['pelvis']]
    pbone.rigify_type = 'spines.spine'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['spine.001']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['thigh.L']]
    pbone.rigify_type = 'limbs.leg'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['thigh.R']]
    pbone.rigify_type = 'limbs.leg'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['spine.002']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['shin.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['shin.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['spine.003']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['foot.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['foot.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['shoulder.L']]
    pbone.rigify_type = 'basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['shoulder.R']]
    pbone.rigify_type = 'basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['neck']]
    pbone.rigify_type = 'spines.neck_short'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['toe.L']]
    pbone.rigify_type = 'limbs.finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['toe.R']]
    pbone.rigify_type = 'limbs.finger'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['upper_arm.L']]
    pbone.rigify_type = 'limbs.arm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['upper_arm.R']]
    pbone.rigify_type = 'limbs.arm'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['head']]
    pbone.rigify_type = 'basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['forearm.L']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['forearm.R']]
    pbone.rigify_type = ''
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['hand.L']]
    pbone.rigify_type = 'basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    pbone = obj.pose.bones[bones['hand.R']]
    pbone.rigify_type = 'basic.super_copy'
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'

    bpy.ops.object.mode_set(mode='EDIT')
    for bone in arm.edit_bones:
        bone.select = False
        bone.select_head = False
        bone.select_tail = False
    for b in bones:
        bone = arm.edit_bones[bones[b]]
        bone.select = True
        bone.select_head = True
        bone.select_tail = True
        bone.bbone_x = bone.bbone_z = bone.length * 0.05
        arm.edit_bones.active = bone

    # Compatibility for bone layers/collections
    if hasattr(arm, 'rigify_layers') and hasattr(arm.rigify_layers[0], 'assign'):
        # Blender 4.0+ - assign all bones to first collection
        collection = arm.rigify_layers[0]
        for bone_name in bones.values():
            bone = arm.edit_bones[bone_name]
            collection.assign(bone)
    else:
        # Blender 3.x - set layer 0
        for bone_name in bones.values():
            bone = arm.edit_bones[bone_name]
            bone.layers = [True] + [False] * 31

    bpy.ops.object.mode_set(mode='OBJECT')
    return bones
if __name__ == "__main__":
    create(bpy.context.active_object)
